export interface Task {
    name: string;
    desc: string;
    active: boolean;
}
export declare type Tasks = {
    [name: string]: Task;
};
export declare type Option = object;
export declare type Options = {
    [name: string]: Option;
};
export declare type TaskDescriptions = {
    [name: string]: string;
};
export interface Settings {
    taskDescriptions?: TaskDescriptions;
    options?: Options;
}
export declare class FuseBoxCLI {
    private static initialized;
    private _tasks;
    private optionValues;
    constructor(settings?: Settings);
    addOption(name: string, option: Option): this;
    addOptions(options?: Options): this;
    addTaskDescription(name: string, desc: string): this;
    addTaskDescriptions(descriptions?: TaskDescriptions): this;
    addTask(name: string): this;
    showHelp(exitProcess?: boolean): this;
    run(): this;
    parse(argv?: string[]): this;
    shutDown(): this;
    private initYargs();
    private initRunners();
    private initTaskRegisterer();
    readonly tasks: Tasks;
    readonly options: {
        [name: string]: any;
    };
    readonly $yargs: any;
}
export declare function CLI(settings?: Settings): FuseBoxCLI;
